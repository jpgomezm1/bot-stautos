// test-gcs-audio.js
const axios = require('axios');

const NGROK_URL = 'https://abd3c260797c.ngrok.app';
const AUTHORIZED_NUMBER = '573183351733';

async function testGCSAudio() {
  console.log('‚òÅÔ∏è PRUEBA DE AUDIO CON GOOGLE CLOUD STORAGE');
  console.log('=' .repeat(60));
  
  try {
    // 1. Probar conexi√≥n GCS
    console.log('1Ô∏è‚É£ Probando GCS...');
    const gcsTest = await axios.get(`${NGROK_URL}/admin/test-gcs`);
    console.log('‚úÖ GCS:', gcsTest.data);
    
    // 2. Generar y subir audio
    console.log('\n2Ô∏è‚É£ Probando audio con GCS...');
    const audioTest = await axios.get(`${NGROK_URL}/admin/test-audio`);
    console.log('‚úÖ Audio + GCS:', audioTest.data);
    
    // 3. Listar audios en bucket
    console.log('\n3Ô∏è‚É£ Audios en bucket...');
    const audiosList = await axios.get(`${NGROK_URL}/admin/gcs-audios`);
    console.log('üìÅ Archivos:', audiosList.data);
    
    // 4. Iniciar conversaci√≥n
    console.log('\n4Ô∏è‚É£ Iniciando conversaci√≥n...');
    const conversation = await axios.post(`${NGROK_URL}/start-conversation`, {
      phoneNumber: AUTHORIZED_NUMBER
    });
    console.log('‚úÖ Conversaci√≥n:', conversation.data);
    
    console.log('\nüéâ ¬°AUDIO CON GCS CONFIGURADO!');
    console.log('‚òÅÔ∏è Los audios se suben autom√°ticamente a Google Cloud Storage');
    console.log('üåê URLs p√∫blicas desde storage.googleapis.com');
    console.log('üóëÔ∏è Limpieza autom√°tica cada 6 horas');
    
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
  }
}

testGCSAudio();